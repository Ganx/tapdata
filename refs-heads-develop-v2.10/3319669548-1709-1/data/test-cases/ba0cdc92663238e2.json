{
  "uid" : "ba0cdc92663238e2",
  "name" : "create PG datasource with form",
  "fullName" : "test_datasource.TestDataSource#test_postgres",
  "historyId" : "c237dd82ddad2feda3f10d0d2ed5220a",
  "time" : {
    "start" : 1666690389818,
    "stop" : 1666690400096,
    "duration" : 10278
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
  "statusTrace" : "self = <test.test_datasource.TestDataSource object at 0x7ffa69bf5e50>\n\n    @allure.title(\"create PG datasource with form\")\n    def test_postgres(self):\n        host, port = env['postgres.HOST'].split(\":\")\n        test_ds = DataSource(\"postgresql\", f\"test_postgres_{random_str()}\")\n        test_ds.host(host).database(env['postgres.DB']).user(env['postgres.USERNAME']) \\\n            .password(env['postgres.PASSWORD']).schema(\"admin\").port(int(port))\n        assert test_ds.save()\n        assert test_ds.validate()\n>       assert test_ds.status() == \"ready\"\nE       AssertionError: assert 'invalid' == 'ready'\nE         - ready\nE         + invalid\n\ntest_datasource.py:59: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
    "statusTrace" : "self = <test.test_datasource.TestDataSource object at 0x7ffa69bf5e50>\n\n    @allure.title(\"create PG datasource with form\")\n    def test_postgres(self):\n        host, port = env['postgres.HOST'].split(\":\")\n        test_ds = DataSource(\"postgresql\", f\"test_postgres_{random_str()}\")\n        test_ds.host(host).database(env['postgres.DB']).user(env['postgres.USERNAME']) \\\n            .password(env['postgres.PASSWORD']).schema(\"admin\").port(int(port))\n        assert test_ds.save()\n        assert test_ds.validate()\n>       assert test_ds.status() == \"ready\"\nE       AssertionError: assert 'invalid' == 'ready'\nE         - ready\nE         + invalid\n\ntest_datasource.py:59: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4b15aa988cc826e2",
      "name" : "stdout",
      "source" : "4b15aa988cc826e2.txt",
      "type" : "text/plain",
      "size" : 824
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "datasource"
  }, {
    "name" : "suite",
    "value" : "test_datasource"
  }, {
    "name" : "subSuite",
    "value" : "TestDataSource"
  }, {
    "name" : "host",
    "value" : "090778b3cd34"
  }, {
    "name" : "thread",
    "value" : "959-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_datasource"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 53,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 53
      },
      "items" : [ {
        "uid" : "afedf6b146c881e2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666685632292,
          "stop" : 1666685642459,
          "duration" : 10167
        }
      }, {
        "uid" : "ce15af7cafb743c8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666682924581,
          "stop" : 1666682934748,
          "duration" : 10167
        }
      }, {
        "uid" : "177336098457cd9d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666672125676,
          "stop" : 1666672135797,
          "duration" : 10121
        }
      }, {
        "uid" : "70a801810bd5a385",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666670679029,
          "stop" : 1666670689159,
          "duration" : 10130
        }
      }, {
        "uid" : "2fa0b1735871f18c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666669674264,
          "stop" : 1666669684435,
          "duration" : 10171
        }
      }, {
        "uid" : "b8e2cabd2863870e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666668761600,
          "stop" : 1666668771711,
          "duration" : 10111
        }
      }, {
        "uid" : "8ee88ccd7d24ca4f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666667473539,
          "stop" : 1666667483663,
          "duration" : 10124
        }
      }, {
        "uid" : "b9c1b4c96cc9c364",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666664400752,
          "stop" : 1666664410925,
          "duration" : 10173
        }
      }, {
        "uid" : "2d078c19fc1fd14",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666622407109,
          "stop" : 1666622417223,
          "duration" : 10114
        }
      }, {
        "uid" : "2ad6e8422c1341de",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666615349134,
          "stop" : 1666615359323,
          "duration" : 10189
        }
      }, {
        "uid" : "206944ce064c0678",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666609977961,
          "stop" : 1666609988121,
          "duration" : 10160
        }
      }, {
        "uid" : "22f34501d2fe82b1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666607404798,
          "stop" : 1666607414918,
          "duration" : 10120
        }
      }, {
        "uid" : "37c31a47785d9d09",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666604355645,
          "stop" : 1666604365759,
          "duration" : 10114
        }
      }, {
        "uid" : "f27dac3b79e32a61",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666601989817,
          "stop" : 1666601999954,
          "duration" : 10137
        }
      }, {
        "uid" : "25c0438a9e5d2e60",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666600735733,
          "stop" : 1666600745891,
          "duration" : 10158
        }
      }, {
        "uid" : "d33bc7330028245",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666599797200,
          "stop" : 1666599807351,
          "duration" : 10151
        }
      }, {
        "uid" : "5e1e75d898708a02",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666590201066,
          "stop" : 1666590211292,
          "duration" : 10226
        }
      }, {
        "uid" : "2480857fb39c0401",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666587034894,
          "stop" : 1666587045016,
          "duration" : 10122
        }
      }, {
        "uid" : "272b1973cd9129d8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666585441590,
          "stop" : 1666585451777,
          "duration" : 10187
        }
      }, {
        "uid" : "5c3f734e05adc251",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
        "time" : {
          "start" : 1666577253957,
          "stop" : 1666577264094,
          "duration" : 10137
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ba0cdc92663238e2.json",
  "parameterValues" : [ ]
}