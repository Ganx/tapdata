{
  "uid" : "753223641500b4a1",
  "name" : "create mongodb datasource with uri",
  "fullName" : "test_datasource.TestDataSource#test_mongo_create_by_uri",
  "historyId" : "b4d87711d3a8f3ded82c4677aae2c954",
  "time" : {
    "start" : 1666090845465,
    "stop" : 1666090855681,
    "duration" : 10216
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
  "statusTrace" : "self = <test.test_datasource.TestDataSource object at 0x7f686a4e8bd0>\n\n    @allure.title(\"create mongodb datasource with uri\")\n    def test_mongo_create_by_uri(self):\n        mongo_test = DataSource(\"mongodb\", f\"test_mongo_{random_str()}\")\n        mongo_test.uri(env['database_1.URI'])\n        assert mongo_test.save()\n        assert mongo_test.validate()\n>       assert mongo_test.status() == \"ready\"\nE       AssertionError: assert 'invalid' == 'ready'\nE         - ready\nE         + invalid\n\ntest_datasource.py:38: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'invalid' == 'ready'\n  - ready\n  + invalid",
    "statusTrace" : "self = <test.test_datasource.TestDataSource object at 0x7f686a4e8bd0>\n\n    @allure.title(\"create mongodb datasource with uri\")\n    def test_mongo_create_by_uri(self):\n        mongo_test = DataSource(\"mongodb\", f\"test_mongo_{random_str()}\")\n        mongo_test.uri(env['database_1.URI'])\n        assert mongo_test.save()\n        assert mongo_test.validate()\n>       assert mongo_test.status() == \"ready\"\nE       AssertionError: assert 'invalid' == 'ready'\nE         - ready\nE         + invalid\n\ntest_datasource.py:38: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "de6e7ec715034bbc",
      "name" : "stdout",
      "source" : "de6e7ec715034bbc.txt",
      "type" : "text/plain",
      "size" : 824
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "datasource"
  }, {
    "name" : "suite",
    "value" : "test_datasource"
  }, {
    "name" : "subSuite",
    "value" : "TestDataSource"
  }, {
    "name" : "host",
    "value" : "125898ca5794"
  }, {
    "name" : "thread",
    "value" : "881-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_datasource"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "753223641500b4a1.json",
  "parameterValues" : [ ]
}